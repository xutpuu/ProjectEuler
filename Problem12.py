# Problem 12 
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?
import math as m

def divisors(number):
    counter = 0
    sqrt = int(m.sqrt(number))
    for i in range(1,sqrt,1):
        if number % i == 0:
            counter += 2
    
    if sqrt * sqrt == number:
        counter -= 1
        
    return counter

def __main__():
    i = 1
    n = 0
    while divisors(n) < 500:
        n += i
        i += 1
    print(n)

__main__()