# Pentagonal numbers are generated by the formula, Pₙ=n(3n−1)/2. The first ten pentagonal numbers are:
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P₄ + P₇ = 22 + 70 = 92 = P₈. However, their difference, 70 − 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pⱼ and Pₖ, for which their sum and difference are pentagonal
# and D = |Pₖ − Pⱼ| is minimised; what is the value of D?


def benchmark(func):
    import time

    def wrapper(*args, **kwargs):
        start = time.time()
        return_value = func(*args, **kwargs)
        end = time.time()
        print("[*] Total time taken: {} sec.".format(end - start))
        return return_value

    return wrapper


def pentagonal(n):
    return int(n * (3 * n - 1) / 2)


@benchmark
def main():
    P = []
    limit = 10000

    print("Begin")
    for i in range(1, limit + 1, 1):
        P.append(pentagonal(i))

    j = 1
    for k in range(1, limit, 1):
        for j in range(k + 1, limit, 1):
            if P[j] + P[k] in P:
                #print(P[j], P[k], P[j] + P[k])
                if P[j] - P[k] in P:
                    print(P[j] - P[k])
                    break


if __name__ == "__main__":
    main()
